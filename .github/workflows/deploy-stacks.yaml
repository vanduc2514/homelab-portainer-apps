name: Deploy stacks to Portainer

on:
  push:
    branches:
      - main

jobs:
  generate-deployment-stacks-matrix:
    name: Generate deployment stacks matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      has_stacks: ${{ steps.set-matrix.outputs.has_stacks }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate matrix from /stacks directory 
        id: set-matrix
        shell: bash
        run: |
          echo "Scanning for stacks..."
          matrix='{"include":['
          first=1
          has_stacks=false
          for dir in stacks/*; do
            if [ -d "$dir" ] && [ -f "$dir/docker-compose.yml" ]; then
              has_stacks=true
              stack_name=$(basename "$dir")
              stack_compose_path="$dir/docker-compose.yml"
              if [ $first -eq 1 ]; then
                first=0
              else
                matrix+=","
              fi
              matrix+="{\"stack_name\":\"${stack_name}\",\"stack_compose_path\":\"${stack_compose_path}\"}"
              echo "Found stack: ${stack_name} at ${stack_compose_path}"
            fi
          done
          matrix+=']}'
          echo "Resulting matrix: $matrix"
          echo "::set-output name=matrix::$matrix"
          echo "::set-output name=has_stacks::$has_stacks"

  deploy-stacks-matrix:
    name: Deploy Stacks to Portainer
    needs: generate-deployment-stacks-matrix
    if: ${{ needs.generate-deployment-stacks-matrix.outputs.has_stacks == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      GITHUB_REF: ${{ github.ref }}
    strategy:
      matrix: ${{ fromJson(needs.generate-deployment-stacks-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy stack to Portainer
        uses: cssnr/portainer-stack-deploy-action@v1
        with:
          url: ${{ vars.PORTAINER_HOST }}
          token: ${{ secrets.PORTAINER_TOKEN }}
          type: repo
          standalone: true
          ref: refs/heads/main
          name: ${{ matrix.stack_name }}
          file: ${{ matrix.stack_compose_path }}
